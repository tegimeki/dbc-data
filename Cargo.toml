[package]
name = "dbc-data"
version = "0.1.9"
edition = "2021"
authors = ["Michael Fairman <mfairman@tegimeki.com>"]
readme = "README.md"
description = "Derive macro for CAN DBC code generation"
repository = "https://github.com/oxibus/dbc-data"
keywords = ["can", "automotive", "ecu", "no-std"]
categories = ["embedded", "no-std", "parsing", "encoding"]
license = "MIT OR Apache-2.0"
rust-version = "1.79"

[lib]
proc-macro = true

[dependencies]
can-dbc = "6.0.0"
proc-macro2 = "1.0"
quote = "1.0"
syn = { version = "2.0", features = ["full", "extra-traits"] }

[dev-dependencies]
assert-eq-float = "0.1.4"
assert_hex = "0.4.1"

[lints.rust]
unsafe_code = "forbid"
unused_qualifications = "warn"

[lints.clippy]
# Restrictions
#panic_in_result_fn = "warn"
todo = "warn"
unwrap_used = "warn"
# Pedantics without being too noisy
cargo = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
# TODO: fix these, or decide to allow them project-wide
cast_possible_truncation = "allow"  # 36
float_cmp = "allow"  #  9
cast_sign_loss = "allow"  #  9
assertions_on_constants = "allow"  #  4
approx_constant = "allow"  #  4
similar_names = "allow"  #  3
panic_in_result_fn = "allow"  #  3
multiple_crate_versions = "allow"  #  3
match_wild_err_arm = "allow"  #  3
many_single_char_names = "allow"  #  3
cast_possible_wrap = "allow"  #  2
